---
- name: Deploy to Kubernetes
  hosts: all
  # become: true
  become_user: zaidbr
  vars:
    kubernetes_deployments_dir: "../../kubernetes/deployments"
  tasks:
    # - name: Initialiser le cluster Minikube
    #   shell: "export PATH=$PATH:/usr/local/bin && minikube start --driver=docker"
    - name: Copier le fichier de déploiement MySQL vers la VM
      ansible.builtin.copy:
        src: "../../kubernetes/deployments/mysql-deployment.yaml"
        dest: "/home/zaidbr/kubernetes_deployments/mysql-deployment.yaml"
    
    - name: Copier le fichier de déploiement Back-end vers la VM
      ansible.builtin.copy:
        src: "../../kubernetes/deployments/backend-deployment.yaml"
        dest: "/home/zaidbr/kubernetes_deployments/backend-deployment.yaml"
      
    - name: Deploy MySQL to Kubernetes
      ansible.builtin.shell: |
        export PATH=$PATH:/usr/local/bin
        kubectl apply -f /home/zaidbr/kubernetes_deployments/mysql-deployment.yaml
      register: mysql_output

    - name: Show MySQL Deployment Status
      ansible.builtin.debug:
        msg: "{{ mysql_output.stdout }}"

    - name: Deploy Backend to Kubernetes
      ansible.builtin.shell: |
        export PATH=$PATH:/usr/local/bin
        kubectl apply -f /home/zaidbr/kubernetes_deployments/backend-deployment.yaml
      register: backend_output

    - name: Show Backend Deployment Status
      ansible.builtin.debug:
        msg: "{{ backend_output.stdout }}"
